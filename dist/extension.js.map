{
  "version": 3,
  "sources": ["../src/index.ts", "../src/components/ExportShareGptDatasetButton.tsx"],
  "sourcesContent": ["import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport ExportShareGptDatasetButton from \"./components/ExportShareGptDatasetButton.tsx\";\r\n\r\n// Function to render the button component within the DOM using jQuery for insertion\r\njQuery(() => {\r\n    const parentElement = document.querySelector('#option_select_chat');\r\n    if (parentElement) {\r\n        const container = document.createElement('div');\r\n        parentElement.insertAdjacentElement('afterend', container);\r\n\r\n        const root = createRoot(container);\r\n        const element = React.createElement(ExportShareGptDatasetButton, null);\r\n\r\n        root.render(element);\r\n    } else {\r\n        console.error(\"Parent element '#option_select_chat' not found\");\r\n    }\r\n});", "import React from \"react\";\n\nconst ExportShareGptDatasetButton: React.FC = () => {\n  const handleClick = () => {\n    try {\n      const context = SillyTavern.getContext();\n\n      const chatId = context.getCurrentChatId();\n      if (!chatId) {\n        toastr.info(\"Please select a chat first\");\n        return;\n      }\n\n      // Construct the dataset for exporting\n      const dataset = {\n        conversation: context.chat.map((message) => ({\n          role: message.is_user ? \"user\" : \"assistant\",\n          content: message.mes,\n        })),\n        model: \"gpt-3.5-turbo\",\n      };\n\n      if (!dataset.conversation.length) {\n        toastr.info(\"No exportable data found\");\n        return;\n      }\n\n      const timestamp = moment().format(\"YYYY-MM-DD_HH-mm-ss\");\n      const blob = new Blob([JSON.stringify(dataset, null, 4)], {\n        type: \"application/json\",\n      });\n      const url = URL.createObjectURL(blob);\n      const downloadLink = document.createElement(\"a\");\n      downloadLink.href = url;\n      downloadLink.download = `${chatId}_sharegpt_${timestamp}.json`;\n      downloadLink.click();\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error(\"Error while exporting dataset:\", error);\n      toastr.error(\"An error occurred while exporting the dataset.\");\n    }\n  };\n\n  return (\n    <a id=\"option_export_sharegpt_dataset\" onClick={handleClick}>\n      <i className=\"fa-lg fa-solid fa-comments\"></i>\n      <span>Export as ShareGPT Dataset</span>\n    </a>\n  );\n};\n\nexport default ExportShareGptDatasetButton;\n"],
  "mappings": ";AAAA,OAAOA,YAAW;AAClB,SAAS,kBAAkB;;;ACD3B,OAAO,WAAW;AAElB,IAAM,8BAAwC,MAAM;AAClD,QAAM,cAAc,MAAM;AACxB,QAAI;AACF,YAAM,UAAU,YAAY,WAAW;AAEvC,YAAM,SAAS,QAAQ,iBAAiB;AACxC,UAAI,CAAC,QAAQ;AACX,eAAO,KAAK,4BAA4B;AACxC;AAAA,MACF;AAGA,YAAM,UAAU;AAAA,QACd,cAAc,QAAQ,KAAK,IAAI,CAAC,aAAa;AAAA,UAC3C,MAAM,QAAQ,UAAU,SAAS;AAAA,UACjC,SAAS,QAAQ;AAAA,QACnB,EAAE;AAAA,QACF,OAAO;AAAA,MACT;AAEA,UAAI,CAAC,QAAQ,aAAa,QAAQ;AAChC,eAAO,KAAK,0BAA0B;AACtC;AAAA,MACF;AAEA,YAAM,YAAY,OAAO,EAAE,OAAO,qBAAqB;AACvD,YAAM,OAAO,IAAI,KAAK,CAAC,KAAK,UAAU,SAAS,MAAM,CAAC,CAAC,GAAG;AAAA,QACxD,MAAM;AAAA,MACR,CAAC;AACD,YAAM,MAAM,IAAI,gBAAgB,IAAI;AACpC,YAAM,eAAe,SAAS,cAAc,GAAG;AAC/C,mBAAa,OAAO;AACpB,mBAAa,WAAW,GAAG,MAAM,aAAa,SAAS;AACvD,mBAAa,MAAM;AACnB,UAAI,gBAAgB,GAAG;AAAA,IACzB,SAAS,OAAO;AACd,cAAQ,MAAM,kCAAkC,KAAK;AACrD,aAAO,MAAM,gDAAgD;AAAA,IAC/D;AAAA,EACF;AAEA,SACE,oCAAC,OAAE,IAAG,kCAAiC,SAAS,eAC9C,oCAAC,OAAE,WAAU,8BAA6B,GAC1C,oCAAC,cAAK,4BAA0B,CAClC;AAEJ;AAEA,IAAO,sCAAQ;;;AD9Cf,OAAO,MAAM;AACT,QAAM,gBAAgB,SAAS,cAAc,qBAAqB;AAClE,MAAI,eAAe;AACf,UAAM,YAAY,SAAS,cAAc,KAAK;AAC9C,kBAAc,sBAAsB,YAAY,SAAS;AAEzD,UAAM,OAAO,WAAW,SAAS;AACjC,UAAM,UAAUC,OAAM,cAAc,qCAA6B,IAAI;AAErE,SAAK,OAAO,OAAO;AAAA,EACvB,OAAO;AACH,YAAQ,MAAM,gDAAgD;AAAA,EAClE;AACJ,CAAC;",
  "names": ["React", "React"]
}
